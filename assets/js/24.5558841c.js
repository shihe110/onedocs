(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{357:function(a,e,r){"use strict";r.r(e);var t=r(42),n=Object(t.a)({},(function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"spring中的aware"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring中的aware"}},[a._v("#")]),a._v(" Spring中的Aware")]),a._v(" "),r("h4",{attrs:{id:"spring中的aware相关的接口功能描述。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring中的aware相关的接口功能描述。"}},[a._v("#")]),a._v(" Spring中的Aware相关的接口功能描述。")]),a._v(" "),r("ul",[r("li",[r("ol",[r("li",[a._v("Spring中提供了一些以Aware结尾的接口，实现了Aware接口的bean在被初始化之后，可以获取相应的资源。")])])]),a._v(" "),r("li",[r("p",[a._v("2、 通过Aware接口，可以对Spring相应的资源进行操作(一定要慎重)；")])]),a._v(" "),r("li",[r("p",[a._v("3、 为了对Spring进行简单的扩展提供了方便的入口。")])])]),a._v(" "),r("p",[a._v("以下对Aware相关的部分接口作介绍：ApplicationContextAware和BeanNameAware等进行介绍。")]),a._v(" "),r("p",[a._v("①、ApplicationContextAware：")]),a._v(" "),r("p",[a._v("在实现了这个接口之后，他可以提供对Spring IOC容器的上下文进行操作的功能。声明应用上下文的。")]),a._v(" "),r("p",[a._v("②、BeanNameAware：")]),a._v(" "),r("p",[a._v("提供对BeanName进行操作。")]),a._v(" "),r("p",[a._v("③、 ApplicationEventPublisherAware:")]),a._v(" "),r("p",[a._v("主要用于事件的发布。")]),a._v(" "),r("p",[a._v("④、BeanClassLoadAware：")]),a._v(" "),r("p",[a._v("相关的类加载器。")]),a._v(" "),r("p",[a._v("⑤、BeanFactoryAware：")]),a._v(" "),r("p",[a._v("声明BeanFactory的。")]),a._v(" "),r("p",[a._v("⑥、 BootstrapContextAware：")]),a._v(" "),r("p",[a._v("⑦、 LoadTimeWeaverAware:")])])}),[],!1,null,null,null);e.default=n.exports}}]);