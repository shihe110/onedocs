(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{372:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),a("p",[s._v("学习目标")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker安装")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像命令")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器命令")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 操作命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器数据卷")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络原理")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# idea整合docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker compose")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker swarm 集群")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker jenkins（持续部署集成） ")]),s._v("\n")])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker为什么会出现？")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开发、生产环境软件版本等不一致出现的问题（环境配置的问题、跨平台的问题、开发和运维的协调费时费力）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker带着环境打包（镜像）上线解决问题")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运维只需下载镜像运行就好了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker提供的隔离机制，将服务器压榨到极致")]),s._v("\n")])])]),a("h3",{attrs:{id:"docker掌握目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker掌握目标"}},[s._v("#")]),s._v(" Docker掌握目标")]),s._v(" "),a("ul",[a("li",[s._v("docker基础")]),s._v(" "),a("li",[s._v("docker原理")]),s._v(" "),a("li",[s._v("docker网络")]),s._v(" "),a("li",[s._v("docker服务")]),s._v(" "),a("li",[s._v("docker集群")]),s._v(" "),a("li",[s._v("docker日志")]),s._v(" "),a("li",[s._v("docker错误排查等")])]),s._v(" "),a("h3",{attrs:{id:"centos下载安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#centos下载安装"}},[s._v("#")]),s._v(" Centos下载安装")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("1、系统要求")]),s._v(" "),a("p",[s._v("centos7")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 环境查看")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uname -r")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-514.el7.x86_64\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本机环境")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/os-release ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CentOS Linux"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7 (Core)"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centos"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ID_LIKE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rhel fedora"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PRETTY_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CentOS Linux 7 (Core)"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ANSI_COLOR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0;31"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CPE_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cpe:/o:centos:centos:7"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOME_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://www.centos.org/"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BUG_REPORT_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://bugs.centos.org/"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CENTOS_MANTISBT_PROJECT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CentOS-7"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CENTOS_MANTISBT_PROJECT_VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REDHAT_SUPPORT_PRODUCT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"centos"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("REDHAT_SUPPORT_PRODUCT_VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"7"')]),s._v("\n\n")])])])]),s._v(" "),a("li",[a("p",[s._v("2、卸载老版本docker及其依赖")])])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])])]),a("h3",{attrs:{id:"三种安装方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种安装方式"}},[s._v("#")]),s._v(" 三种安装方式")]),s._v(" "),a("ul",[a("li",[s._v("docker仓库安装（推荐）")]),s._v(" "),a("li",[s._v("rpm包手动安装")]),s._v(" "),a("li",[s._v("脚本安装")])]),s._v(" "),a("p",[a("strong",[s._v("[仓库安装]")])]),s._v(" "),a("p",[s._v("1、安装yum-utils(提供yum-config-mamager)包并设置仓库")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装工具包")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置镜像仓库")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--add-repo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\thttps://download.docker.com/linux/centos/docker-ce.repo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认国外地址")]),s._v("\n\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 阿里云镜像")]),s._v("\n$ yum-config-manager "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--add-repo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\thttp://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 阿里云镜像地址")]),s._v("\n")])])]),a("p",[s._v("2、安装docker引擎")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新yum软件包索引")]),s._v("\nyum makecache fast "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清缓存")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装docker ce社区版（推荐）  ee企业版")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者安装特定版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出版本")]),s._v("\n$ yum list docker-ce --showduplicates "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -r \n")])])]),a("p",[s._v("3、启动docker")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动docker服务")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start docker\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断是否启动成功")]),s._v("\n$ docker version \n")])])]),a("p",[s._v("4、使用hello-world镜像验证docker是否正确安装")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run hello-world\n")])])]),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010220430591.png",alt:"image-20201010220430591"}})]),s._v(" "),a("p",[s._v("5、查看hello-world镜像")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ docker images\n")])])]),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010220635053.png",alt:"image-20201010220635053"}})]),s._v(" "),a("h3",{attrs:{id:"卸载docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卸载docker"}},[s._v("#")]),s._v(" 卸载docker")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载docker依赖")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove docker-ce docker-ce-cli containerd.io\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除资源")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /var/lib/docker\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /var/lib/docker docker的默认工作路径")]),s._v("\n")])])]),a("h3",{attrs:{id:"docker工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker工作原理"}},[s._v("#")]),s._v(" Docker工作原理")]),s._v(" "),a("p",[a("strong",[s._v("1、docker  run 启动过程")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ docker run hello-world\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动命令执行后")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker会在本机寻找镜像-如果有则直接运行-如果没有该镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 去docker hub寻找该镜像-如果找到则下载到本地运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果找不到则返回错误提示找不到该镜像")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010222054356.png",alt:"image-20201010222054356"}})]),s._v(" "),a("p",[a("strong",[s._v("2、docker是怎么工作的？")])]),s._v(" "),a("p",[s._v("docker是一个cs结构的系统，docker的守护进程运行在主机上。通过socket客户端连接访问。")]),s._v(" "),a("p",[s._v("docker-server接受到docker-client的指令并执行。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010223120936.png",alt:"image-20201010223120936"}})]),s._v(" "),a("p",[a("strong",[s._v("3、docker为什么比vm快？")])]),s._v(" "),a("p",[s._v("1、docker比虚拟机抽象层更少")]),s._v(" "),a("p",[s._v("2、docker利用宿主机内核，vm需要虚拟Guest OS。新建一个容器的时候，docker不需要像虚拟机一样重新加载一个操作系统内核，避免引导，虚拟机加载guest os是分钟级别的，docker直接利用宿主机不需要加载，是秒级的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010223228789.png",alt:"image-20201010223228789"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010223614193.png",alt:"image-20201010223614193"}})]),s._v(" "),a("h3",{attrs:{id:"阿里云镜像加速器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里云镜像加速器"}},[s._v("#")]),s._v(" 阿里云镜像加速器")]),s._v(" "),a("p",[s._v("1.登录阿里云找到容器服务")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010221228111.png",alt:"image-20201010221228111"}})]),s._v(" "),a("p",[s._v("2.配置镜像加速器")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cshihe%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201010221123022.png",alt:"image-20201010221123022"}})]),s._v(" "),a("p",[s._v("3.配置镜像加速器")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建加速目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /etc/docker \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编写配置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<-")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'EOF\'\n{\n\t"registry-mirrors":["https://qiyb9988.mirror.aliyuncs.com"]\n}\nEOF')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart docker\n")])])]),a("h3",{attrs:{id:"docker的常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker的常用命令"}},[s._v("#")]),s._v(" Docker的常用命令")]),s._v(" "),a("ul",[a("li",[s._v("帮助命令")]),s._v(" "),a("li",[s._v("镜像命令")]),s._v(" "),a("li",[s._v("容器命令")])]),s._v(" "),a("h4",{attrs:{id:"帮助命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助命令"}},[s._v("#")]),s._v(" 帮助命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker version  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker版本信息")]),s._v("\ndocker info \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker的系统信息，显示镜像的数据和运行情况")]),s._v("\ndocker 命令 --help\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker的帮助文档")]),s._v("\n")])])]),a("p",[s._v("帮助文档官网地址：https://docs.docker.com/engine/reference/commandline/docker/")]),s._v(" "),a("h4",{attrs:{id:"镜像命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像命令"}},[s._v("#")]),s._v(" 镜像命令")]),s._v(" "),a("p",[a("strong",[s._v("docker images")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker images "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看本地主机所有镜像")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker images")]),s._v("\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nhello-world         latest              bf756fb1ae65        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" months ago        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(".3kB\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 说明")]),s._v("\nREPOSITORY  镜像仓库源（名称）\nTAG\t\t\t镜像的标签\nIMAGE ID\t镜像的id\nCREATED\t\t镜像创建时间\nSIZE\t\t镜像大小\n\ndocker images --help "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看帮助文档")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选参数")]),s._v("\n-a, --all  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有镜像")]),s._v("\n-q, --quiet "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示镜像的id")]),s._v("\n")])])]),a("p",[a("strong",[s._v("docker search镜像搜索")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker search hello-world")]),s._v("\nNAME                                       DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED\nhello-world                                Hello World"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("an example of minimal Dockeriz鈥  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1308")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                \nkitematic/hello-world-nginx                A light-weight nginx container that demonstr鈥  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("148")]),s._v("                                     \ntutum/hello-world                          Image to "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" docker deployments. Has Apache鈥  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73")]),s._v("                                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ndockercloud/hello-world                    Hello World"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("                                    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v("                                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用帮助文档，查看具体可选参数")]),s._v("\ndocker search --help\n")])])]),a("p",[a("strong",[s._v("docker pull 镜像下载")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载镜像")]),s._v("\ndocker pull mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等价命令")]),s._v("\ndocker pull docker.io/library/mysql:latest\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择版本")]),s._v("\ndocker pull 镜像名称"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker镜像下载，分层下载，docker image核心联合文件系统")]),s._v("\n\n\ndocker pull --help\n")])])]),a("h4",{attrs:{id:"容器命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器命令"}},[s._v("#")]),s._v(" 容器命令")]),s._v(" "),a("h3",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),a("p",[s._v("一句话描述：批量服务容器编排")]),s._v(" "),a("ul",[a("li",[s._v("Compose是用于定义和运行多容器的应用程序工具。")]),s._v(" "),a("li",[s._v("可以使用yaml文件配置docker-compose.yml")]),s._v(" "),a("li",[s._v("使用命令启动docker-compose  up")])]),s._v(" "),a("p",[s._v("Docker Compose使用三个步骤：")]),s._v(" "),a("ul",[a("li",[s._v("1、Dockerfile")]),s._v(" "),a("li",[s._v("2、docker-compose.yml")]),s._v(" "),a("li",[s._v("3、docker-compose up")])]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("Docker Compose是Docker官方的开源项目，需要安装！")]),s._v(" "),a("p",[s._v("Dockerfile是让程序在任何地方运行")])]),s._v(" "),a("p",[s._v("docker-compose.yml")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000:5000"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/code\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" logvolume01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/log\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("links")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("logvolume01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("Docker Compose作用")]),s._v(" "),a("ul",[a("li",[s._v("service服务， 一系列的服务、应用（ web、mysql、redis等等）")]),s._v(" "),a("li",[s._v("project项目，一组向关联的容器。")])]),s._v(" "),a("hr"),s._v(" "),a("h4",{attrs:{id:"安装docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[s._v("#")]),s._v(" 安装Docker Compose")]),s._v(" "),a("ul",[a("li",[s._v("命令行安装当前稳定版docker compose")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 官方下载安装地址，可能会很慢")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用国内镜像下载安装")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://get.daocloud.io/docker/compose/releases/download/1.27.4/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n")])])]),a("ul",[a("li",[s._v("赋权(docker-compose操作权限)")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])])]),a("ul",[a("li",[s._v("验证安装")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker-compose version\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 出现版本信息，表示安装成功")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker-compose version")]),s._v("\ndocker-compose version "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.27")]),s._v(".4, build "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40524192")]),s._v("\ndocker-py version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.3")]),s._v(".1\nCPython version: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.7")]),s._v(".7\nOpenSSL version: OpenSSL "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v(".0l  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" Sep "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("\n")])])]),a("h4",{attrs:{id:"体验docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#体验docker-compose"}},[s._v("#")]),s._v(" 体验Docker Compose")]),s._v(" "),a("p",[s._v("getstart地址：https://docs.docker.com/compose/gettingstarted/")]),s._v(" "),a("p",[a("strong",[s._v("一、创建一个web服务")])]),s._v(" "),a("ul",[a("li",[s._v("1、创建一个工程目录")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" composetest\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" composetest\n")])])]),a("ul",[a("li",[s._v("2、创建一个工程文件：app.py")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" redis\nfrom flask "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" Flask\n\napp "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Flask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncache "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis.Redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'redis'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ndef get_hit_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    retries "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" True:\n        try:\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" cache.incr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hits'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        except redis.exceptions.ConnectionError as exc:\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" retries "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":\n                raise exc\n            retries -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n            time.sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n@app.route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ndef hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n    count "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" get_hit_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World! I have been seen {} times."),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(".format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[s._v("3、创建requirements.txt")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("flask\nredis\n")])])]),a("p",[a("strong",[s._v("二、创建并编写Dockerfile")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 官方示例")]),s._v("\nFROM python:3.7-alpine\nWORKDIR /code\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_APP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("app.py\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_RUN_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\nRUN apk "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --no-cache gcc musl-dev linux-headers\nCOPY requirements.txt requirements.txt\nRUN pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flask"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义")]),s._v("\nFROM python:3.7-alpine\nWORKDIR /code\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_APP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("app.py\nENV "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FLASK_RUN_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\nCOPY requirements.txt requirements.txt\nRUN pip "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"flask"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[a("strong",[s._v("三、创建docker-compose.yml编排服务")])]),s._v(" "),a("p",[s._v("定义了两个服务：web服务和redis服务")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000:5000"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis:alpine"')]),s._v("\n")])])]),a("p",[a("strong",[s._v("四、构建启动docker-compose")])]),s._v(" "),a("p",[s._v("在当前文件夹下")]),s._v(" "),a("ul",[a("li",[s._v("构建")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker-compose build\n")])])]),a("ul",[a("li",[s._v("启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker-compose up "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动docker-compose .:dockerfile目录地址")]),s._v("\n")])])]),a("ul",[a("li",[s._v("访问测试：http://localhost:5000/ 验证")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" http://localhost:5000 \n")])])]),a("ul",[a("li",[s._v("切换终端查看镜像列表")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker images "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])])]),a("ul",[a("li",[s._v("停止compose")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker-compose down "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者Ctrl+C")]),s._v("\n")])])]),a("p",[a("strong",[s._v("五、编辑compose文件增加挂载目录")])]),s._v(" "),a("p",[s._v("volumes参数：修改web应用代码不用重新构建镜像")]),s._v(" "),a("p",[s._v("environment参数：设置开发环境，在development模式下flask run时重新加载代码。")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3.8"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5000:5000"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/code\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("FLASK_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" development\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis:alpine"')]),s._v("\n")])])]),a("p",[a("strong",[s._v("六、重启docker-compose")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ docker-compose up\n")])])]),a("p",[a("strong",[s._v("七、修改app.py应用代码访问测试")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello from Docker! I have been seen {} times."),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(".format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[a("strong",[s._v("八、其他命令")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker-compose up -d "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动并后台运行")]),s._v("\n\n$ docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看运行情况")]),s._v("\n\n$ docker-compose run web "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# run 一次性命令 查看可用于web的环境变量")]),s._v("\n\n$ docker-compose stop "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止服务 Ctrl+c")]),s._v("\n\n$ docker-compose down --volumes "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭移除 使用volumes移除redis使用数据")]),s._v("\n\n$ docker-compose --help "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看帮助文档")]),s._v("\n")])])]),a("p",[a("strong",[s._v("docker网络")])]),s._v(" "),a("p",[s._v("在同一个网络下，可以通过域名访问（服务挂了没关系，重启一个名称不变就没关系）")]),s._v(" "),a("h4",{attrs:{id:"卸载docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卸载docker-compose"}},[s._v("#")]),s._v(" 卸载Docker Compose")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# curl方式安装docker compose卸载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /usr/local/bin/docker-compose\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pip方式安装docker compose卸载")]),s._v("\npip uninstall docker-compose\n")])])]),a("p",[s._v("通过Docker Compose编写配置文件，实现一键启动所有服务。")]),s._v(" "),a("hr"),s._v(" "),a("h4",{attrs:{id:"docker-compose-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yaml"}},[s._v("#")]),s._v(" docker-compose.yaml")]),s._v(" "),a("ul",[a("li",[s._v("配置文件编写规则")])]),s._v(" "),a("p",[s._v("yaml规则:https://docs.docker.com/compose/compose-file/")]),s._v(" "),a("p",[s._v("docker-compose.yml")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3层")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一层：version版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二层：service服务")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务 服务配置（环境）等")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第三层：其他配置")]),s._v("\n")])])]),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 版本")]),s._v("\nservices："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务")]),s._v("\n\t服务1：web\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务配置")]),s._v("\n\t\timages\n\t\tbuild\n\t\tnetwork\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(".\n\t服务2：redis\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(".\n\t服务3：redis\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其他配置 网络/卷、全局规则")]),s._v("\nvolumes：\nnetworks：\nconfigs：\n")])])]),a("p",[a("strong",[s._v("官网docs中使用docker-compose一键部署WordPress的例子")])]),s._v(" "),a("p",[s._v("https://docs.docker.com/compose/wordpress/")]),s._v(" "),a("h4",{attrs:{id:"docker小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker小结"}},[s._v("#")]),s._v(" Docker小结")]),s._v(" "),a("ul",[a("li",[s._v("1、Docker镜像，run -> 容器")]),s._v(" "),a("li",[s._v("2、Dockerfile构建镜像（服务打包）")]),s._v(" "),a("li",[s._v("3、Docker-Compose启动项目（多服务编排，环境配置）")]),s._v(" "),a("li",[s._v("4、Docker网络")])]),s._v(" "),a("h4",{attrs:{id:"docker-compose实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose实战"}},[s._v("#")]),s._v(" Docker Compose实战")]),s._v(" "),a("p",[s._v("4部曲：")]),s._v(" "),a("ul",[a("li",[s._v("1、编写微服务项目")]),s._v(" "),a("li",[s._v("2、Dockerfile构建镜像")]),s._v(" "),a("li",[s._v("3、docker-compose.yml编排服务")]),s._v(" "),a("li",[s._v("4、打包上线启动：docker-compose up")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新打包部署")]),s._v("\ndocker-compose up --build\n")])])]),a("h3",{attrs:{id:"docker-swarm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm"}},[s._v("#")]),s._v(" Docker Swarm")]),s._v(" "),a("h4",{attrs:{id:"集群搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群搭建"}},[s._v("#")]),s._v(" 集群搭建")]),s._v(" "),a("p",[s._v("初始化docker swarm")]),s._v(" "),a("p",[s._v("加入一个节点")]),s._v(" "),a("p",[s._v("获取管理节点")]),s._v(" "),a("p",[s._v("获取管理员令牌：manager worker")]),s._v(" "),a("p",[s._v("查看集群节点: docker node ls")]),s._v(" "),a("h4",{attrs:{id:"raft协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raft协议"}},[s._v("#")]),s._v(" Raft协议")]),s._v(" "),a("p",[s._v("​\t一致性算法")]),s._v(" "),a("p",[s._v("集群最小要保证有3台管理节点，且必须保证大于1台的管理节点存活，才可以保证集群可用。")]),s._v(" "),a("h4",{attrs:{id:"扩缩容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩缩容"}},[s._v("#")]),s._v(" 扩缩容")]),s._v(" "),a("h3",{attrs:{id:"docker-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-stack"}},[s._v("#")]),s._v(" Docker stack")]),s._v(" "),a("p",[s._v("docker-compose 单机部署")]),s._v(" "),a("p",[s._v("docker stack集群部署")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单机")]),s._v("\ndocker-compose up -d wordpress.yaml\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 集群部署")]),s._v("\ndocker stack deploy wordpress.yaml \n")])])]),a("h3",{attrs:{id:"docker-secret"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-secret"}},[s._v("#")]),s._v(" Docker secret")]),s._v(" "),a("h3",{attrs:{id:"docker-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-config"}},[s._v("#")]),s._v(" Docker config")]),s._v(" "),a("h3",{attrs:{id:"拓展到k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展到k8s"}},[s._v("#")]),s._v(" 拓展到K8S")]),s._v(" "),a("p",[s._v("应用上云-k8s商店-原生应用-下载云应用-配置运营")]),s._v(" "),a("p",[a("strong",[s._v("精通K8S")])]),s._v(" "),a("p",[s._v("云原生")]),s._v(" "),a("p",[a("strong",[s._v("Go语言")])]),s._v(" "),a("p",[s._v("​\tdocker")]),s._v(" "),a("p",[s._v("​\tk8s")]),s._v(" "),a("p",[s._v("​\tetcd")]),s._v(" "),a("p",[s._v("​\tv8")]),s._v(" "),a("ul",[a("li",[s._v("入门")]),s._v(" "),a("li",[s._v("基础语法")]),s._v(" "),a("li",[s._v("高级对象")]),s._v(" "),a("li",[s._v("框架")])]),s._v(" "),a("hr"),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"docker-desktop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-desktop"}},[s._v("#")]),s._v(" Docker Desktop")]),s._v(" "),a("p",[a("strong",[s._v("是什么？")])]),s._v(" "),a("p",[s._v("Docker Desktop为Windows、Mac提供的一个桌面化的容器开发环境，在win10上，使用了Windows的Hyper-V虚拟化技术。")]),s._v(" "),a("h4",{attrs:{id:"win10下使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#win10下使用"}},[s._v("#")]),s._v(" win10下使用")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("前提")]),s._v(" "),a("p",[s._v("Windows10专业版以上系统")]),s._v(" "),a("p",[s._v("打开Hyper-V功能  "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v",target:"_blank",rel:"noopener noreferrer"}},[s._v("打开方式"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("下载安装")]),s._v(" "),a("p",[s._v("docker desktop下载地址：https://hub.docker.com/editions/community/docker-ce-desktop-windows")])])]),s._v(" "),a("p",[s._v("那么Docker Desktop安装后使用方式和在Linux下或云服务器一毛一样。")]),s._v(" "),a("h3",{attrs:{id:"docker常用命令总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令总结"}},[s._v("#")]),s._v(" Docker常用命令总结")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.检查docker版本")]),s._v("\n\ndocker version\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.搜索镜像")]),s._v("\n\ndocker search tomcat\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3.拉取镜像")]),s._v("\n\ndocker pull tomcat\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4.根据镜像启动容器")]),s._v("\n\ndocker run --name mytomcat -d tomcat:latest\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5.查看运行中的容器")]),s._v("\n\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 6.停止运行中的容器")]),s._v("\n\ndocker stop containerId\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 7.查看所有容器")]),s._v("\n\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 8.启动容器")]),s._v("\n\ndocker start 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(".删除一个容器\n\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 10.启动一个做了端口映射的容器(nginx)")]),s._v("\n\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 nginx\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 说明：-d：后台启动 -p：将主机的端口映射到容器的一个端口 主机端口：容器端口")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 11.查看容器的日志")]),s._v("\n\ndocker logs container-name/container-id\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 12.查看镜像列表")]),s._v("\n\ndocker images\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 13.删除一个镜像")]),s._v("\n\ndocker rmi imageId\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 14.进入运行中的容器")]),s._v("\n\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器name/id sh/ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 15.退出运行中的容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n\n")])])]),a("h3",{attrs:{id:"docker使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker使用"}},[s._v("#")]),s._v(" Docker使用")]),s._v(" "),a("h4",{attrs:{id:"docker-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-hello-world"}},[s._v("#")]),s._v(" Docker hello world")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker运行ubuntu：15.10镜像，并在容器中执行echo命令输出“hello world”。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo "Hello world"，然后输出结果。')]),s._v("\n$ docker run ubuntu:15.10 /bin/echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行交互式容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Docker 以 ubuntu15.10 镜像创建一个新容器，然后进入容器并开启一个标准输入和终端进行交互。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -i表示对容器使用标准输入进行交互。 -t表示在新容器内指定一个终端。")]),s._v("\n$ docker run -i -t ubuntu:15.10 /bin/bash\nroot@0123ce188bd8:/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出容器回到主机")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" 或者 ctrl+d\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器后台模式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后台模式启动Ubuntu容器并后台输出hello world")]),s._v("\n$ docker run -d ubuntu:15.10 /bin/sh -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"while true; do echo hello world; sleep 1; done"')]),s._v("\n2b1b7a428627c51ab8810d541d759f072b4fc75487eed05812646b8534a2fe63\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器的运行状态")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\nCONTAINER ID        IMAGE                  COMMAND              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  \n5917eac21c36        ubuntu:15.10           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh -c \'while t…"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CONTAINER ID: 容器 ID。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IMAGE: 使用的镜像。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# COMMAND: 启动容器时运行的命令。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CREATED: 容器的创建时间。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# STATUS: 容器状态。7种状态：created（已创建） restarting（重启中） running（运行中） removing（迁移中） paused（暂停） exited（停止） dead（死亡）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PORTS：端口信息和连接类型（tcp、udp）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NAMES：自动分配的容器的名称")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在宿主机内查看容器内标准输出：")]),s._v("\n$ docker logs 容器id\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\n$ docker stop containerid\n")])])]),a("h4",{attrs:{id:"docker容器使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker容器使用"}},[s._v("#")]),s._v(" Docker容器使用")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有命令")]),s._v("\n$ docker \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看帮助文档")]),s._v("\n$ docker 命令 --help "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run --help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\n$ docker pull imagename\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从镜像启动一个容器")]),s._v("\n$ docker run 参数 imagename 命令 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it ubuntu /bin/bash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出容器")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止容器")]),s._v("\n$ docker stop containerid\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动已停止容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n$ docker start containerid\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启容器")]),s._v("\n$ docker restart containerid\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器后台运行")]),s._v("\n$ docker run -itd --name ubuntu-test ubuntu /bin/bash "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d表示后台运行 --name给容器起个名字ubuntu-test ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入运行中的容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" containerid "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#docker exec -it 容器id /bin/bash  (推荐的方式)")]),s._v("\n$ docker attach "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" containerid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ubuntu.tar "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出容器快照")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入容器快照docker import")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" docker/ubuntu.tar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" - test/ubuntu:v1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将快照文件ubuntu.tar导入到镜像test/ubuntu:v1")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" http://example.com/example.tgz example/imagepo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从指定URL或某个目录来导入")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f containerid\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理所有终止状态的容器")]),s._v("\n$ docker container prune\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行一个web应用")]),s._v("\n$ docker pull training/webapp "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\n$ docker run -d -P training/webapp python app.py "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 容器后台运行  -P:将容器内部使用的网络端口随机映射到主机上。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看web容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过查看PORTS信息查看端口映射 在主机访问")]),s._v("\nPORTS\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:32769-"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("/tcp\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器的5000端口映射到宿主机的32769端口 http://127.0.0.1:32769访问web应用")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义设置端口映射 将容器5000端口映射到宿主机5000端口")]),s._v("\n$ docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 training/webapp python app.py\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看端口映射的快捷方式")]),s._v("\n$ docker port containerid或容器名称  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看容器和宿主机的端口映射")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看web应用日志")]),s._v("\n$ docker logs -f containerid\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看web应用容器的进程")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" containername\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查web应用")]),s._v("\n$ docker inspect containername \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止web应用")]),s._v("\n$ docker stop containername\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启web应用容器")]),s._v("\n$ docker start containername\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启正在运行的web应用容器")]),s._v("\n$ docker restart containername\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询最后一次创建的容器")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -l\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除web应用容器(要删除的容器必须是停止状态的容器，否则会报错)")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" containername\n\n")])])]),a("h4",{attrs:{id:"docker镜像使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像使用"}},[s._v("#")]),s._v(" Docker镜像使用")]),s._v(" "),a("ul",[a("li",[s._v("管理使用本地镜像")]),s._v(" "),a("li",[s._v("创建镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看列出所有镜像")]),s._v("\n$ docker images\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run-运行 -t开启一个终端 -i标准输入交互式操作 ubuntu-镜像仓库 15.10-tag版本 /bin/bash容器运行命令")]),s._v("\n$ docker run -t -i ubuntu:15.10 /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像(层层拉取)")]),s._v("\n$ docker pull ubuntu:13.10\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找镜像")]),s._v("\n$ docker search ubuntu\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动镜像")]),s._v("\n$ docker run ubuntu\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除")]),s._v("\n$ docker rmi ubuntu\n\n")])])]),a("p",[a("strong",[s._v("创建镜像")])]),s._v(" "),a("ul",[a("li",[s._v("从已创建的容器中更新镜像，并提交这个镜像")]),s._v(" "),a("li",[s._v("使用Dockerfile指令来创建一个新镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1.开启一个容器并进入交互式终端")]),s._v("\n$ docker run -i -t ubuntu:15.10 /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.在容器中更新")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3.退出容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4.提交容器副本")]),s._v("\n$ docker commit -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"has update"')]),s._v(" -a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"shihe"')]),s._v(" containerid shihe/ubuntu:v2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -m:提交的表述信息 -a:作者 shihe/ubuntu:v2:指定要创建的目标镜像名")]),s._v("\n\n\n")])])]),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cadmin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201012103215884.png",alt:"image-20201012103215884"}})]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 说明：每一个指令都必须是大写，都会在镜像上创建一个新的层。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FROM：指定使用哪个镜像源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RUN：告诉docker在镜像内执行命令")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建镜像")]),s._v("\n$ docker build -t xxx/ubuntu:v3 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -t:指定要创建的目标镜像名 .:Dockerfile文件所在的目录")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置镜像标签")]),s._v("\ndocker tag containerid xxx/ubuntu:dev  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker tag 镜像id、用户名、镜像源名：标签名")]),s._v("\n\n")])])]),a("h4",{attrs:{id:"docker容器连接（网络）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker容器连接（网络）"}},[s._v("#")]),s._v(" Docker容器连接（网络）")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 网络端口映射")]),s._v("\n$ docker run -d -P training/webapp python app.py \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -P:容器内部端口随机映射到宿主机端口")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p:指定容器内部端口映射到宿主机端口")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定绑定网络地址")]),s._v("\n$ docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5001:5000 training/webapp python app.py\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问http://127.0.0.1:5001 ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认绑定tcp端口，指定udp端口")]),s._v("\n$ docker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:5001:5000/udp training/webapp python app.py\n\n")])])]),a("p",[a("strong",[s._v("容器的互联")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker允许多个容器互联，共享连接信息，会创建一个父子关系，父容器可以看到子容器的信息。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器命名")]),s._v("\n$ docker run -d -P --name shihe training/webapp python app.py\n$ docker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -l\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建网络")]),s._v("\ndocker network create -d bridge test-net  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d:指定docker网络类型，bridge、overlay（用于Swarm mode）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看网络")]),s._v("\n$ docker network "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连接容器")]),s._v("\n$ docker run -itd --name shihe --network test-net ubuntu /bin/bash\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开一个新终端，运行一个新容器加入到test-net网络")]),s._v("\n$ docker run -itd --name shihe1 --network test-net ubuntu /bin/bash\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试网络连接")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it shihe /bin/bash\n/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping shihe1")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it shihe1 /bin/bash\n/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping shihe")]),s._v("\n")])])]),a("p",[a("strong",[s._v("配置DNS")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在宿主机场景文件：/etc/docker/daemon.json")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dns"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"114.114.114.114"')]),s._v(",\n\t\t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8.8.8.8"')]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置完成，重启docker，启动容器，查看dns是否生效")]),s._v("\n$ docker run -it --rm ubuntu "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" etc/resolv.conf\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 手动指定容器的配置")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果只想在指定的容器设置 DNS，则可以使用以下命令：")]),s._v("\n$ docker run -it --rm -h host_ubuntu  --dns"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("114.114")]),s._v(".114.114 --dns-search"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("test.com ubuntu\n")])])]),a("h4",{attrs:{id:"docker仓库管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker仓库管理"}},[s._v("#")]),s._v(" Docker仓库管理")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注册Docker Hub")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登陆docker hub(管理自己的镜像)")]),s._v("\n$ docker login\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 退出docker hub")]),s._v("\n$ docker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("logout")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送镜像")]),s._v("\n$ docker push dockerhubusername/ubuntu:18.05\n")])])]),a("h4",{attrs:{id:"docker-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-dockerfile"}},[s._v("#")]),s._v(" Docker Dockerfile")]),s._v(" "),a("p",[a("strong",[s._v("使用Dockerfile定制镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在空目录下新建Dockerfile文件并添加内容")]),s._v("\nFROM nginx\nRUN "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'这是一个本地构建的Nginx镜像'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/share/nginx/html/index.html\n")])])]),a("p",[a("strong",[s._v("说明：")])]),s._v(" "),a("p",[s._v("FROM:定制的镜像基于nginx镜像")]),s._v(" "),a("p",[s._v("RUN:命令在/usr/share/nginx/html/下新建index.html文件，内容为“这是一个本地构建的Nginx镜像”")]),s._v(" "),a("p",[s._v("RUN命令的两种格式：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell格式")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("命令行命令"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec格式")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"可执行文件"')]),s._v("，"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数1"')]),s._v("，"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# RUN ["./test.php","dev","offline"] 等价 RUN ./test.php dev offline')]),s._v("\n")])])]),a("p",[a("strong",[s._v("注意")]),s._v("：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("FROM centos\nRUN yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf redis.tar.gz\n以上执行会创建 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 层镜像。可简化为以下格式：\nFROM centos\nRUN yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf redis.tar.gz\n")])])]),a("p",[a("strong",[s._v("构建")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ docker build -t nginx:v3 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .：表示上下文路径")]),s._v("\n")])])]),a("p",[a("strong",[s._v("构建指令")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# COPY指令：从上下文目录中复制文件或目录到容器指定路径")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--chown"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("源路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("目标路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--chown"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<源路径1>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<目标路径>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ADD指令：格式和COPY一致推荐使用COPY")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMD指令：")]),s._v("\nCMD 在docker run 时运行。\nRUN 是在 docker build。\n\nCMD "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("shell 命令"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<可执行文件或命令>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ENTRYPOINT")]),s._v("\n优点：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。\n注意：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。\n\n格式：\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<executeable>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param1>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<param2>"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ENV")]),s._v("\n设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。\n\n格式：\nENV "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nENV "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ARG")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# VOLUME")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# EXPOSE")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# WORKDIR")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# USER")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HEALTHCHECK")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ONBUILD")]),s._v("\n\n")])])]),a("h4",{attrs:{id:"docker-compose-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-2"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),a("p",[s._v("Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。主要用于单机。")]),s._v(" "),a("h4",{attrs:{id:"docker-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-machine"}},[s._v("#")]),s._v(" Docker Machine")]),s._v(" "),a("h4",{attrs:{id:"docker-swarm-集群管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm-集群管理"}},[s._v("#")]),s._v(" Docker Swarm 集群管理")]),s._v(" "),a("hr"),s._v(" "),a("h2",{attrs:{id:"docker入门总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker入门总结"}},[s._v("#")]),s._v(" Docker入门总结")]),s._v(" "),a("h4",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[s._v("#")]),s._v(" 基础")]),s._v(" "),a("h4",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),a("h4",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),a("p",[s._v("Dockerfile用于构建镜像的命令脚本文件")]),s._v(" "),a("p",[s._v("【重点】from、run、entrypoint、cmd")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#基于centos镜像")]),s._v("\nFROM centos:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#维护人的信息 下面2种选一即可")]),s._v("\nMAINTANIER www.qsm.com\nLABEL "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maintainer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"qsm.cn"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置环境内环境变量")]),s._v("\nENV JAVA_HOME /usr/local/jdk1.8.0_45\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#add COPY 都是拷贝，但是add会解压")]),s._v("\nADD jdk-8u45-linux-x64.tar.gz /usr/local\nADD apache-tomcat-8.0.46.tar.gz /usr/local\nCOPY server.xml /usr/local/apache-tomcat-8.0.46/conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#构建镜像时运行的Shell命令")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f /usr/local/*.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#工作目录，进入容器的默认目录")]),s._v("\nWORKDIR /usr/local/apache-tomcat-8.0.46\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启8080端口")]),s._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#类似于 CMD 指令，不会被覆盖。多个仅最后一个生效。cmd同时存在，作为entrypoint参数")]),s._v("\nENTRYPOINT "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./bin/catalina.sh"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当启动docker run容器时执行的命令。可覆盖。多个仅最后一个生效。")]),s._v("\nCMD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/run.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("![Dockerfile]("),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200612192849464.png",alt:"Dockerfile"}})]),s._v(" "),a("h2",{attrs:{id:"docker进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker进阶"}},[s._v("#")]),s._v(" Docker进阶")]),s._v(" "),a("h3",{attrs:{id:"_1、进阶基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、进阶基础"}},[s._v("#")]),s._v(" 1、进阶基础")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("虚拟化：核心是对资源的抽象。目的是为了在同一台机器上同时运行多个系统或者应用，从而提升系统资源的利用率，降低成本。")])]),s._v(" "),a("li",[a("p",[s._v("操作系统虚拟化（docker）、完全虚拟化（虚拟机）")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker是虚拟化技术中的：操作系统虚拟化，直接服用宿主机的操作系统。即在宿主机内核通过创建多个虚拟的操作系统实例（内核和库）来隔离不同的进程。\nVMware等软件是完全虚拟化，即完整的底层硬件环境和特权指令的执行过程。\n")])])])]),s._v(" "),a("li",[a("p",[s._v("核心概念")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("镜像：生成容器模本（源代码）。由多个只读层组成。与容器的唯一区别是，容器在这些只读层上面添加了一层可读写的容器层。\n容器：镜像的一个实例；由只读镜像层和可读写容器层组成。表现为一个微型操作系统和一个（组）应用。\n仓库：存放镜像的地方；实际上为Registry仓库注册服务器，仓库只是相对于某个镜像的而言的。即仓库存放mysql镜像，有为很多版本。Registry仓库注册服务器则有很多仓库，比如mysql仓库和redis仓库等。注册索引（index）则是负责维护用户的账号，权限等管理。\n\n层：联合文件系统，是一种轻量级的高性能分层文件系统，每次修改作为一次提交，并层层叠加。多个层就可以组成一个镜像，即联合文件系统是实现docker镜像的技术基础。\n")])])])]),s._v(" "),a("li",[a("p",[s._v("命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像详情")]),s._v("\ndocker inspect mysql:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像分层信息")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("history")]),s._v(" tomcat:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像清理，一些临时镜像文件和没有使用的镜像")]),s._v("\ndocker prune -af\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像创建，四种commit import builid，load")]),s._v("\ndocker commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add a new file'")]),s._v(" -a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'docker nb'")]),s._v(" 容器id qsmtomcat:0.1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像上传")]),s._v("\ndocker push qsmtomcat:1.0\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器run,等于create和start")]),s._v("\ndocker run -it -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),s._v(":8080 --name mytomcat 镜像id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器导出")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" -o qsm.tar ce5\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器导入")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" qsm.tar - test/qsmtomcat:1.0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器信息，inspect详情。top进程。stats统计信息，cup内存，网络等")]),s._v("\ndocker stats 容器id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器查看变更 diff 容器内一些数据修改;")]),s._v("\ndocker "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" 容器id\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器，更新配置update，一些运行时资源配置。")]),s._v("\ndocker update--cpu-quota "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" 容器id/name\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仓库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以使用registry镜像搭建本地仓库")]),s._v("\ndocker run -d -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000 registry:2\n")])])])]),s._v(" "),a("li",[a("p",[s._v("docker数据管理")]),s._v(" "),a("p",[a("strong",[s._v("1、使用数据卷")]),s._v("容器内的数据直接映射到本地主机环境")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 两种实现方式\n#  第一种，--mount\ndocker run -d -P --name web --mount type=bind,source=/webapp,destination=/opt/webapp training/webapp python app.py\n# 第二种，在run命令的时候直接-v\ndocker run -it -p 8888:8080 --name qsmtomcat2 -v /local/tomcat/webapps/ /usr/local/tomcat/webapps tomcat镜像id\n")])])]),a("p",[a("strong",[s._v("2、使用数据卷容器")]),s._v("容器间数据共享")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先创建一个容器")]),s._v("\ndocker run -it -v /dbdata --name dbdata ubuntu\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其他容器使用--volumes-from 来指定容器")]),s._v("\ndocker run -it --volumes-from dbdata --name db1 ubuntu\n")])])])]),s._v(" "),a("li",[a("p",[s._v("docker容器访问")]),s._v(" "),a("p",[s._v("一是使用端口映射，二是容器互联")]),s._v(" "),a("p",[s._v("前者在run命令的时候使用-p指定或者-P随机指定。")]),s._v(" "),a("p",[s._v("后者是创建一个容器之后，在另外一个容器–link 第一个容器名")])]),s._v(" "),a("li",[a("p",[s._v("Dockerfile")]),s._v(" "),a("p",[s._v("基础的操作系统镜像有busybox debian centos ubuntu等")])])]),s._v(" "),a("h3",{attrs:{id:"_2、实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、实现原理"}},[s._v("#")]),s._v(" 2、实现原理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("基本架构")]),s._v(" "),a("p",[s._v("C/S架构+仓库")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("C端：用户使用的Docker可执行命令就是客户端程序。\nS端：dockerd，接受请求。docker-proxy端口映射。containerd具体处理与容器相关的请求，containerd-shim，为runC容器提供支持，并且作为容器内进程的根进程。\n仓库：存放镜像\n")])])])]),s._v(" "),a("li",[a("p",[s._v("底层实现：namespace、cgroup，UnionFS")])]),s._v(" "),a("li",[a("p",[s._v("docker网络")]),s._v(" "),a("p",[s._v("五种网络")])]),s._v(" "),a("li",[a("p",[s._v("docker compose")]),s._v(" "),a("p",[s._v("三要素")])])]),s._v(" "),a("p",[s._v("文档地址(https://blog.csdn.net/u013541707/article/details/106768531)")]),s._v(" "),a("hr")])}),[],!1,null,null,null);t.default=n.exports}}]);