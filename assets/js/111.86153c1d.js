(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{456:function(t,s,n){"use strict";n.r(s);var a=n(42),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"springboot之spring注解的工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot之spring注解的工作原理"}},[t._v("#")]),t._v(" SpringBoot之Spring注解的工作原理")]),t._v(" "),n("h3",{attrs:{id:"工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),n("p",[t._v("注解本身并没有实际功能，只是元数据，用来描述数据，如描述被注解的类、方法、属性、参数、构造函数等。")]),t._v(" "),n("p",[t._v("注解本身没有功能代码，但我们可以通过注解找到我们注解的类、方法、属性、参数等数据，来根据这些数据来实现相应的功能。")]),t._v(" "),n("h2",{attrs:{id:"beanpostporcessor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beanpostporcessor"}},[t._v("#")]),t._v(" BeanPostPorcessor")]),t._v(" "),n("p",[t._v("BeanPostPorcessor实现中有一类名称为*AnnotationBeanPostProcessor都是针对处理注解的，对容器内标注了指定注解的Bean，进行功能处理。如：")]),t._v(" "),n("ul",[n("li",[t._v("AutowiredAnnotationBeanPostProcessor：让@Autowired、@Value、@Inject注解起效；")]),t._v(" "),n("li",[t._v("CommonAnnotationBeanPostProcessor：让@PostConstruct、@PreDestroy注解起效；")]),t._v(" "),n("li",[t._v("AsyncAnnotationBeanPostProcessor：让@Async或@Asynchronous注解起效；")]),t._v(" "),n("li",[t._v("ScheduledAnnotationBeanPostProcessor：让@Scheduled注解起效；")]),t._v(" "),n("li",[t._v("PersistenceAnnotationBeanPostProcessor：让@PersistenceUnit 、 @PersistenceContext注解起效；")]),t._v(" "),n("li",[t._v("JmsListenerAnnotationBeanPostProcessor：让@JmsListener注解起效。")])]),t._v(" "),n("h3",{attrs:{id:"定义一个注解，向bean注入日志框架，实现系统日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义一个注解，向bean注入日志框架，实现系统日志"}},[t._v("#")]),t._v(" 定义一个注解，向bean注入日志框架，实现系统日志")]),t._v(" "),n("ul",[n("li",[t._v("1.定义注解@InjectLogger")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIELD")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InjectLogger")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("2.定义注解的后置处理器InjectLoggerAnnotationBeanPostProcessor即实现BeanPostProcessor接口。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@Component\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InjectLoggerAnnotationBeanPostPorcessor")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Class"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Annotation")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" changeAnnotationType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("InjectLoggerAnnotationBeanPostPorcessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("changeAnnotationType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" InjectLogger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    @Override\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Object "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessAfterInitialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throws BeansException "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ReflectionUtils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWithFields")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" field "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n            ReflectionUtils"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeAccessible")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("field"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("field"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAnnotationPresent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("changeAnnotationType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4")]),t._v("\n                Logger logger "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LoggerFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLogger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\n                field"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("1.指明当前类处理@InjectLogger注解；"),n("br"),t._v("\n2.通过反射机制对类的每个属性（Field）进行处理，第一个参数是Bean的Class，第二参数是入参为Field无返回值的函数接口的Lambda实现；"),n("br"),t._v("\n3.通过反射机制让当前属性可访问；"),n("br"),t._v("\n4.新建Logger的实例logger"),n("br"),t._v("\n5.通过反射将logger值设置到bean实例的当前属性（field）上。")])]),t._v(" "),n("h3",{attrs:{id:"使用注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用注解"}},[t._v("#")]),t._v(" 使用注解")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@Component\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DemoLoggerService")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    @InjectLogger\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" Logger log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"通过自定义InjectLoggerAnnotationBeanPostPorcessor让注解@InjectLogger注入Logger对象"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"beanfactorypostprocessor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beanfactorypostprocessor"}},[t._v("#")]),t._v(" BeanFactoryPostProcessor")]),t._v(" "),n("p",[t._v("BeanFactoryPostProcessor是针对Bean的配置元数据（注解等）进行处理操作，而这项工作属于BeanFactory的职责范畴。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("ConfigurationClassPostProcessor：使@PropertySource、@ComponentScan、@Component类、@Configuration、@Bean、@Import和@ImportResource注解起效；")])]),t._v(" "),n("li",[n("p",[t._v("EventListenerMethodProcessor：使@EventListener注解起效；")])])]),t._v(" "),n("p",[t._v("我们也通过一个自定义的注解@CustomBean，来自己自动注册Bean，我们的@CustomBean的作用即是配置元数据。")]),t._v(" "),n("p",[t._v("自定义的注解为：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomBean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("功能实现BeanFactoryPostProcessor接口：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@Component\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomBeanDefinitionRegistryPostProcessor")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanFactoryPostProcessor")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    @Override\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConfigurableListableBeanFactory beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throws BeansException "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ClassPathBeanDefinitionScanner scanner "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathBeanDefinitionScanner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BeanDefinitionRegistry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n        scanner"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addIncludeFilter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationTypeFilter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustomBean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n        scanner"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("scan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"top.wisely.springfundamentals.custom_scan"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("1.定义一个类路径Bean定义扫描器，它的入参是BeanDefinitionRegistry类型，而ConfigurableListableBeanFactory是它的子类，可强制转换使用，当然我们可以让我们的类直接实现BeanDefinitionRegistryPostProcessor接口，它的方法void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry)直接提供了BeanDefinitionRegistry的对象；")]),t._v(" "),n("li",[t._v("2.为扫描器添加包含的注解@CustomBean的过滤器；")]),t._v(" "),n("li",[t._v("3.在包top.wisely.springfundamentals.custom_scan下扫描注解；")])]),t._v(" "),n("p",[t._v("配置类")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@Bean\nCommandLineRunner "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("customBeanDefinitionRegistryPostProcessorClr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("CustomBeanService customBeanService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" args "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        customBeanService"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"aop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" Aop")]),t._v(" "),n("p",[t._v("我们还可以通过基于AOP来让注解具备功能，通过拦截标注了指定注解的方法或类，然后再建言执行功能代码。如：")]),t._v(" "),n("ul",[n("li",[t._v("AnnotationTransactionAspect：让@Transactional注解起效；")]),t._v(" "),n("li",[t._v("AnnotationCacheAspect：让@Cacheable注解起效；")])]),t._v(" "),n("h2",{attrs:{id:"组合元注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#组合元注解"}},[t._v("#")]),t._v(" 组合元注解")]),t._v(" "),n("p",[t._v("Spring的大部分的元注解，我们可以使用元注解到其它的注解，即用元注解（元数据）描述注解，从而使其它的注解具备元注解的功能，一般我们认为组合注解是元注解在新的语义下的特例。")]),t._v(" "),n("ul",[n("li",[t._v("@Component元注解：@Service、@Repository、@Controller、@Configuration：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@Documented\n@Component "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组合了@Component注解，具备了声明Bean的能力")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Service")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("@Import元注解：大量的@Enable*注解：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@Documented\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AsyncConfigurationSelector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组合了@Import注解，具备了导入配置的能力")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnableAsync")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("@Conditional元注解：@Profile以及Spring Boot的大量条件注解@ConditionalOn*")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ElementType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("METHOD")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Retention")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RetentionPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n@Documented\n@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Conditional")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OnClassCondition"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" @"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConditionalOnClass")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);