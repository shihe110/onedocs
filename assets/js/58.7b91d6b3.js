(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{401:function(a,e,n){"use strict";n.r(e);var r=n(42),t=Object(r.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"springboot之意识spring容器aware"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot之意识spring容器aware"}},[a._v("#")]),a._v(" SpringBoot之意识Spring容器Aware")]),a._v(" "),n("h2",{attrs:{id:"意识spring容器-aware"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#意识spring容器-aware"}},[a._v("#")]),a._v(" 意识Spring容器 - Aware")]),a._v(" "),n("p",[a._v("程序员的主要工作是业务逻辑代码的编写，业务逻辑代码一般都是技术无关性的，即Spring代码不会侵入到我们的业务逻辑代码中，虽然我们使用了很多Spring的注解，但注解属于一种元数据（和XML一样），不属于代码侵入的范畴。")]),a._v(" "),n("p",[a._v("但是有些时候我们可能不得不让自己的代码和Spring框架耦合，我们通过实现相应的Aware接口即可注入其对应的Bean。")]),a._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[a._v("BeanNameAware：可获得beanName，获得Bean的名称；\nResourceLoaderAware：可获得ResourceLoader，用来加载资源的Bean；\nBeanFactoryAware：可获得BeanFactory，容器的父接口，用于管理Bean的相关操作；\nEnvironmentAware：可获得Environment，当前应用的运行环境；\nMessageSourceAware：可获得MessageSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("用来解析文本信息的Bean；\nApplicationEventPublisherAware：可获得ApplicationEventPublisher，用来发布系统时间的Bean；\nApplicationContextAware：可自动注入ApplicationContext，容器本身。\n")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);