(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{422:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"springboot-nosql数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot-nosql数据库"}},[t._v("#")]),t._v(" SpringBoot-NoSQL数据库")]),t._v(" "),a("h3",{attrs:{id:"spring对mongdb的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring对mongdb的支持"}},[t._v("#")]),t._v(" spring对mongdb的支持")]),t._v(" "),a("p",[t._v("spring对mongdb的支持通过：spring data MongoDB来实现。")]),t._v(" "),a("ul",[a("li",[t._v("1.Object和mongo文档对象Document的映射注解支持")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("@Document")]),t._v(" "),a("td",[t._v("映射领域对象与MongoDB的一个文档")])]),t._v(" "),a("tr",[a("td",[t._v("@Id")]),t._v(" "),a("td",[t._v("映射当前属性是ID")])]),t._v(" "),a("tr",[a("td",[t._v("@DbRef")]),t._v(" "),a("td",[t._v("当前属性将参考其他的文档")])]),t._v(" "),a("tr",[a("td",[t._v("@Field")]),t._v(" "),a("td",[t._v("为文档的属性定义名称")])]),t._v(" "),a("tr",[a("td",[t._v("@Version")]),t._v(" "),a("td",[t._v("将当前属性作为版本")])])])]),t._v(" "),a("ul",[a("li",[t._v("2.MongoTemplate")])]),t._v(" "),a("p",[t._v("像JdbcTemplate一样，mongoTemplate提供了数据访问的方法。\n我们还需为：MongoClient以及MongoDbFactory来配置数据库连接属性。")]),t._v(" "),a("ul",[a("li",[t._v("3.同时提供对Repository的支持。")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonRepository")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MongoRepository")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("配置类：@EnableMongoRepositories")]),t._v(" "),a("h3",{attrs:{id:"springboot对mongo的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot对mongo的支持"}},[t._v("#")]),t._v(" springboot对mongo的支持")]),t._v(" "),a("p",[t._v("自动化配置：org.springframework.boot.autoconfigure.mongo\n自动化配置主要配置了：数据库连接、MongoTemplate\n使用前缀：spring.data.mongodb")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("spring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mongodb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" # 数据库主机地址 默认localhost\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mongodb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v(" # 默认端口"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27017")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mongodb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongodb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test #connection URL\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mongodb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("repositories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" # reposity支持是否开启，默认为开启\n")])])]),a("h3",{attrs:{id:"spring对redis的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring对redis的支持"}},[t._v("#")]),t._v(" spring对redis的支持")]),t._v(" "),a("ul",[a("li",[t._v("配置\nspring通过Spring Data Redis来实现（只针对redis2.6 2.8版本做过测试）。spring data jpa提供了")])]),t._v(" "),a("p",[t._v("连接:ConnectionFactory")]),t._v(" "),a("p",[t._v("数据库操作：RedisTemplate")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ConnectionFactory实现redis客户端：\n    - JedisConnectionFactory\n    - JredisConnectionFactory\n    - LettuceConnectionFactory\n    - SrpConnectionFactory\n")])])]),a("ul",[a("li",[t._v("使用")])]),t._v(" "),a("p",[t._v("数据操作模板：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- RedisTemplate\n\n- StringRedisTemplate\n")])])]),a("p",[t._v("访问方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("opsForValue()")]),t._v(" "),a("td",[t._v("操作只有简单属性的数据")])]),t._v(" "),a("tr",[a("td",[t._v("opsForList()")]),t._v(" "),a("td",[t._v("操作含有list的数据")])]),t._v(" "),a("tr",[a("td",[t._v("opsForSet()")]),t._v(" "),a("td",[t._v("操作含有set的数据")])]),t._v(" "),a("tr",[a("td",[t._v("opsForZSet()")]),t._v(" "),a("td",[t._v("操作含有有序set的数据")])]),t._v(" "),a("tr",[a("td",[t._v("opsForHash()")]),t._v(" "),a("td",[t._v("操作含有hash的数据")])])])]),t._v(" "),a("ul",[a("li",[t._v("定义Serializer")])]),t._v(" "),a("p",[t._v("当数据存储到redis时，键和值都是通过spring提供的serializer序列化到数据库。\nRedisTemplate默认使用的是JdkSerializationRedisSerializer,\nStringRedisTempalte默认使用StringRedisSerializer。")]),t._v(" "),a("p",[t._v("spring data jpa提供了一些Serializer：")]),t._v(" "),a("p",[t._v("GenericToStringSerializer、Jackson2JsonRedisSerializer、\nJacksonJsonRedisSerializer、JDKSerializerRedisSerializer、\nOxmSerializer、StringRedisSerializer")]),t._v(" "),a("h3",{attrs:{id:"springboot对redis的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot对redis的支持"}},[t._v("#")]),t._v(" springboot对redis的支持")]),t._v(" "),a("p",[t._v("包位置：org.springframework.boot.autoconfigure.redis")]),t._v(" "),a("p",[t._v("配置类：RedisAutoConfiguration 默认配置JedisConnectionFactory、RedisTemplate、StringRedisTemplate")]),t._v(" "),a("p",[t._v("RedisProperties配置前缀：spring.redis")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("spring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" # 数据库名称，默认为db0\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost # 服务器地址，默认为localhost\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" # 数据库密码\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v(" # 默认端口"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("idle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" # 连接池设置\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("idle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("active"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wait"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sentinel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("master"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sentinel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nspring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);